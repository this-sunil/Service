import 'dart:collection';

import 'package:evigenie/ManageVehicle.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
class SelectVehiclePage extends StatefulWidget {
  const SelectVehiclePage({Key? key}) : super(key: key);

  @override
  State<SelectVehiclePage> createState() => _SelectVehiclePageState();
}

class _SelectVehiclePageState extends State<SelectVehiclePage> {
  List<CarItem> carProductList=[];
  List<Car> carList=[
    Car("All",""),
    Car("Tata","images/photo/TataLogo.png"),
    Car("MG","images/photo/MG-Motor-Logo.png"),
    Car("Honda","images/photo/hyundai.png"),
    Car("Mahindra","images/photo/mahindra.png"),
    Car("Mercidez","images/photo/Mercedes.png"),
    Car("jaguar","images/photo/Jaguar-Logo.png"),
    Car("Two Wheeler","images/photo/TwoWheeler.png"),
    Car("Mini copper", "images/photo/miniCooper.png"),
    Car("Tesla", "images/photo/tesla-logo.png"),
    Car("Audi","images/photo/Audi.png"),
    Car("Volvo", "images/photo/volvoLogo.png"),
    Car("BYD","images/photo/BYD-Logo.png"),
    Car("KIA","images/photo/KIALOGO.png"),
    Car("BMW","images/photo/bmw-logo.png")
  ];
  List<CarItem> carItemList=[

    CarItem("Tata","images/photo/audicar.png",""),
    CarItem("MG","images/photo/MG-New-Electric-Car.png",""),
    CarItem("Honda","images/photo/HyundaiCar.png",""),
    CarItem("Kia","images/photo/KIACar.png",""),
    CarItem("jaguar","images/photo/jaguarCar.png",""),
    CarItem("Honda","images/photo/HyundaiCar.png",""),
    CarItem("Kia","images/photo/KIACar.png",""),
    CarItem("Mercidez","images/photo/Mercedes_Cars.png",""),
    CarItem("jaguare","images/photo/jaguarCar.png",""),

  ];
  HashSet<Car> selectItem=HashSet();
  HashSet<CarItem> selectCard=HashSet();
  selectBrand(List<Car> carItem,int index) async{
    if(selectItem.length==2){

      selectItem.remove(carItem[index]);
      print(selectItem.length);
    }
    else{
      print("select Item ${selectItem.length}");
      selectItem.clear();
      selectItem.add(carItem[index]);

    }
  }
  multipleSelection(List<CarItem> carItems,int index) async{
    if(selectCard.contains(carItems[index])){

      selectCard.remove(carItems[index]);
    }
    else{

      selectCard.add(carItems[index]);
      selectCard.map((e){
        carProductList.add(CarItem(e.title, e.img, e.subtitle));
      }).toList();
    }
    setState(() {

    });
  }
  bool flag=false;
  @override
  void initState() {
    selectItem.add(carList[0]);
    super.initState();
  }
  @override
  void dispose() {
    // TODO: implement dispose
    super.dispose();
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        iconTheme: IconThemeData(
          color: Colors.black,
        ),
        backgroundColor: Colors.white,
        centerTitle: true,
        title:  Text("Select Vehicle",style: TextStyle(color: Colors.black)),
      ),
      body: ListView(
        physics: BouncingScrollPhysics(),
        children: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Row(
              children: [
                Text("Choose Brand",style: Theme.of(context).textTheme.headline5),
              ],
            ),
          ),
          SizedBox(
            height: 150,
            child: ListView.builder(

                itemCount: carList.length,
                scrollDirection: Axis.horizontal,
                itemBuilder: (context,index){
                  return SizedBox(
                    width: 160,
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: InkWell(
                        onTap: (){
                          setState(() {

                            selectBrand(carList,index);
                          });
                        },
                        child: Card(

                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10)
                          ),
                          elevation: 8,
                          color: selectItem.contains(carList[index])?const Color(0xFF203354):Colors.white,
                          child: index==0?Center(child: Text(carList[index].title,style: selectItem.contains(carList[index])?Theme.of(context).textTheme.bodyText1!.copyWith(color: Colors.white):Theme.of(context).textTheme.bodyText1!.copyWith(color: Colors.black))):Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Image.asset(carList[index].image,width: 80,height: 80),
                              Text(carList[index].title,style: selectItem.contains(carList[index])?Theme.of(context).textTheme.bodyText1!.copyWith(color: Colors.white):Theme.of(context).textTheme.bodyText1!.copyWith(color: Colors.black),),
                            ],
                          ),
                        ),
                      ),
                    ),
                  );
                }),
          ),
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Row(
              children: [
                Text("All Cars",style: Theme.of(context).textTheme.headline5),
              ],
            ),
          ),
          ListView.builder(
              itemCount: carItemList.length,
              shrinkWrap: true,
              physics: NeverScrollableScrollPhysics(),
              scrollDirection: Axis.vertical,
              itemBuilder: (context,index){
                return Stack(
                  children: [

                    InkWell(
                      onTap:(){
                      multipleSelection(carItemList,index);
                    },
                      child: SizedBox(
                        height: 150,
                        child: Padding(
                        padding: const EdgeInsets.only(left:40.0),
                        child: Card(
                          elevation:5,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(10),
                              side: BorderSide(

                              color: selectCard.contains(carItemList[index])?Colors.green:Colors.white,
                            )
                          ),
                          color:selectCard.contains(carItemList[index])?Colors.green.shade100:Colors.white,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.spaceAround,

                            children: [
                              Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Text(carItemList[index].title),
                                ],
                              ),
                              Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: Text("Type 2"),
                                  ),

                                  Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: Text("Wall"),
                                  )
                                ],
                              ),
                              Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: Text("Type 2"),
                                  ),

                                  Padding(
                                    padding: const EdgeInsets.all(8.0),
                                    child: Text("Wall"),
                                  )
                                ],
                              ),

                            ],
                          ),
                        ),
                      ),
                      ),
                    ),
                    Positioned(
                        top:20,
                        left:5,
                        child: Image.asset(carItemList[index].img,width: 150)),
                  ],
                );
              }),
        ],
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
      floatingActionButton: FloatingActionButton.extended(
        backgroundColor: Color(0xFF203354),
        shape: RoundedRectangleBorder(
           borderRadius: BorderRadius.circular(10),
        ),
          extendedPadding: EdgeInsets.symmetric(horizontal: 120),
          onPressed: (){
          Navigator.push(context, MaterialPageRoute(builder: (context)=>ManageVehiclePage(data: carProductList)));
          }, label: Text("Confirm")),
    );
  }
}
class Car{
  final String title;
  final String image;
  Car(this.title,this.image);
}
class CarItem{
  final String title;
  final String img;
  final String subtitle;
  CarItem(this.title,this.img,this.subtitle);
}
